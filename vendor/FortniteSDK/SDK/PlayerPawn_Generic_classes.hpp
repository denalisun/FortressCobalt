#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PlayerPawn_Generic

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"
#include "Engine_structs.hpp"
#include "PlayerPawn_Generic_Parent_classes.hpp"
#include "CoreUObject_structs.hpp"
#include "PlayerWindParticleEmitters_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "FortniteGame_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass PlayerPawn_Generic.PlayerPawn_Generic_C
// 0x0520 (0x1D30 - 0x1810)
class APlayerPawn_Generic_C : public APlayerPawn_Generic_Parent_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_PlayerPawn_Generic_C;               // 0x1810(0x0008)(Transient, DuplicateTransient)
	class UParticleSystemComponent*               SplashEffectsForEnteringOrExitingWater;            // 0x1818(0x0008)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               GamplayWindInteractionEffects;                     // 0x1820(0x0008)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               Effect_Player_Run_Land;                            // 0x1828(0x0008)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               Effect_Player_Walk_Land;                           // 0x1830(0x0008)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               Effect_Player_Walk_Water;                          // 0x1838(0x0008)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               Effect_Player_Run_Water;                           // 0x1840(0x0008)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               Effect_WaterInteraction_FX;                        // 0x1848(0x0008)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               AnimTrailPS;                                       // 0x1850(0x0008)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               HitDamageParticles;                                // 0x1858(0x0008)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UWidgetComponent*                       SpeechBubbleComponent;                             // 0x1860(0x0008)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USpotLightComponent*                    PlayerLight;                                       // 0x1868(0x0008)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         CapsuleFadeTL_RemoveShadow_018B40864B973FCD649A23BAC2709F23; // 0x1870(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            CapsuleFadeTL__Direction_018B40864B973FCD649A23BAC2709F23; // 0x1874(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2BE1[0x3];                                     // 0x1875(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     CapsuleFadeTL;                                     // 0x1878(0x0008)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Full_Shield_Health_Push_6222ABB047B8F22E3C9FC983BD70CEA6; // 0x1880(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Full_Shield_Health_Impact_6222ABB047B8F22E3C9FC983BD70CEA6; // 0x1884(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Full_Shield_Health__Direction_6222ABB047B8F22E3C9FC983BD70CEA6; // 0x1888(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2BE2[0x7];                                     // 0x1889(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Full_Shield_Health;                                // 0x1890(0x0008)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Shield_DamageTimeline_Impact_6DC09F024CD096186AE1389FB8061E30; // 0x1898(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Shield_DamageTimeline__Direction_6DC09F024CD096186AE1389FB8061E30; // 0x189C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2BE3[0x3];                                     // 0x189D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Shield_DamageTimeline;                             // 0x18A0(0x0008)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Shield_Regen_Timeline_Opacity_3DC9958C47D4CEFA60E68699D92BA374; // 0x18A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Shield_Regen_Timeline_Push_3DC9958C47D4CEFA60E68699D92BA374; // 0x18AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Shield_Regen_Timeline__Direction_3DC9958C47D4CEFA60E68699D92BA374; // 0x18B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2BE4[0x7];                                     // 0x18B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Shield_Regen_Timeline;                             // 0x18B8(0x0008)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Shield_ShatterTimeline_Push_F3223F2D4A6B8642F950B0A15F8C6699; // 0x18C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Shield_ShatterTimeline_Opacity_F3223F2D4A6B8642F950B0A15F8C6699; // 0x18C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Shield_ShatterTimeline_HighlightCracks_F3223F2D4A6B8642F950B0A15F8C6699; // 0x18C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Shield_ShatterTimeline__Direction_F3223F2D4A6B8642F950B0A15F8C6699; // 0x18CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2BE5[0x3];                                     // 0x18CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Shield_ShatterTimeline;                            // 0x18D0(0x0008)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         HealthSweep_SafetyOpacity_2A96303441845D0EAAAB1EB68183F8A8; // 0x18D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         HealthSweep_Sweep_2A96303441845D0EAAAB1EB68183F8A8; // 0x18DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            HealthSweep__Direction_2A96303441845D0EAAAB1EB68183F8A8; // 0x18E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2BE6[0x7];                                     // 0x18E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     HealthSweep;                                       // 0x18E8(0x0008)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 ScreenEffect_PlayerHealthDamageDirection;          // 0x18F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 ScreenEffect_PlayerHealthDamage;                   // 0x18F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 ScreenEffect_PlayerShieldDamageDirection;          // 0x1900(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 ScreenEffect_PlayerShieldDamage;                   // 0x1908(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 HitByHuskProjectileClass;                          // 0x1910(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             HitByHuskRangedSound;                              // 0x1918(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             HitByHuskMeleeSound;                               // 0x1920(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           SoulSuckVictimMontage;                             // 0x1928(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         PlayerSpeed;                                       // 0x1930(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Run_Particle_Activate_Speed;                       // 0x1934(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Walk_Dust_Activate_Speed;                          // 0x1938(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Walk_Particle_Reset_Speed;                         // 0x193C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                PreviousVelocityVector;                            // 0x1940(0x000C)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CanSpawnRunKickupFX_;                              // 0x194C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          CanSpawnWalkKickupFX_;                             // 0x194D(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          CanSpawnDustLandFX_;                               // 0x194E(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsInWater;                                         // 0x194F(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               RunWalkParticleRotation;                           // 0x1950(0x000C)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsNinjaInShadowStance_;                            // 0x195C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2BE7[0x3];                                     // 0x195D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  GameplayTagsForHitByHuskMeleeSound;                // 0x1960(0x0020)(Edit, BlueprintVisible)
	class UMaterialInterface*                     Adrenaline_Material;                               // 0x1980(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UMaterialInstanceDynamic*>       AdrenalineRush_HeadAnimatingMIDS;                  // 0x1988(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	TArray<class UMaterialInstanceDynamic*>       AdrenalineRush_BodyAnimatingMIDS;                  // 0x1998(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	struct FLinearColor                           Adrenaline_Rush_Color_Outer_Direct;                // 0x19A8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Adrenaline_Rush_Color_Inner_Direct;                // 0x19B8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Adrenaline_Rush_WPO_Offset;                        // 0x19C8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2BE8[0x4];                                     // 0x19CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystemComponent*               P_AdrenalineRushSparklesRunning;                   // 0x19D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Shield_Material;                                   // 0x19D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UMaterialInstanceDynamic*>       BodyShieldMIDArray;                                // 0x19E0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	TArray<class UMaterialInstanceDynamic*>       HeadShieldMIDArray;                                // 0x19F0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	bool                                          Shield_Active;                                     // 0x1A00(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2BE9[0x3];                                     // 0x1A01(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         WaterCounter;                                      // 0x1A04(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Tick_Delta_Seconds;                                // 0x1A08(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Shield_Damage_Wave_Animation;                      // 0x1A0C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Overall_Shield_Damage_Wave_Animation_Length;       // 0x1A10(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Size;                                              // 0x1A14(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Dying;                                             // 0x1A18(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          CanRippleAgain;                                    // 0x1A19(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2BEA[0x6];                                     // 0x1A1A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             Sound_Shield_Impact;                               // 0x1A20(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Sound_Shield_Destroyed;                            // 0x1A28(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Sound_Shield_FullyCharged;                         // 0x1A30(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Sound_Shield_StartRecharge;                        // 0x1A38(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Shield_Shatter_Opacity;                            // 0x1A40(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Regen_Opacity;                                     // 0x1A44(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Damage_Opacity;                                    // 0x1A48(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Default_Shield_opacity;                            // 0x1A4C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Shield_PushMinValue;                               // 0x1A50(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ShieldVisible_Hit;                                 // 0x1A54(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          ShieldVisible_Recover;                             // 0x1A55(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          ShieldVisible_Shatter;                             // 0x1A56(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          ShieldVisible_FullHealth;                          // 0x1A57(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	float                                         Fully_Regened_Shield_health_Opacity;               // 0x1A58(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2BEB[0x4];                                     // 0x1A5C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  TC_GameplayCueDamageShielded;                      // 0x1A60(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          LatestDamageIsShieldDamage;                        // 0x1A80(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2BEC[0x3];                                     // 0x1A81(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Damage_Taken;                                      // 0x1A84(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Last_Shield_Damage_Time;                           // 0x1A88(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2BED[0x4];                                     // 0x1A8C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UMaterialInstanceDynamic*>       CharmShieldMIDArray;                               // 0x1A90(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	bool                                          BodyValid;                                         // 0x1AA0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          BackpackValid;                                     // 0x1AA1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          HatValid;                                          // 0x1AA2(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          FaceValid;                                         // 0x1AA3(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          CharmValid;                                        // 0x1AA4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          HeadValid;                                         // 0x1AA5(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2BEE[0x2];                                     // 0x1AA6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UMaterialInstanceDynamic*>       AdrenalineRush_CharmAnimatingMIDS;                 // 0x1AA8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	TArray<class UMaterialInstanceDynamic*>       Adrenaline_Rush_MID_Collection;                    // 0x1AB8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	class UParticleSystem*                        P_DBNOResurrect;                                   // 0x1AC8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             DBNOResurrectSound;                                // 0x1AD0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          On_Player_Built_Floor;                             // 0x1AD8(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor)
	uint8                                         Pad_2BEF[0x7];                                     // 0x1AD9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           Event_NeedRoadsActive;                             // 0x1AE0(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Event_NeedRoadsDeactive;                           // 0x1AE8(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  TC_WhereWereGoingWeNeedRoads;                      // 0x1AF0(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UParticleSystem*                        Effect_Player_LandedDust;                          // 0x1B10(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               P_GravitySphere_LeftFoot;                          // 0x1B18(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UMaterialInstanceDynamic*>       TempArray;                                         // 0x1B20(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	class UParticleSystemComponent*               P_GravitySphere_RightFoot;                         // 0x1B30(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Effect_Player_GravitySphereFeet;                   // 0x1B38(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 Shield_BodySkeletalMesh;                           // 0x1B40(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 Shield_HeadSkeletalMesh;                           // 0x1B48(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 Shield_CharmSkeletalMesh;                          // 0x1B50(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 Adrenaline_Rush_Body;                              // 0x1B58(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 Adrenaline_Rush_Head;                              // 0x1B60(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 Adrenaline_Rush_Charm;                             // 0x1B68(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        Sound_Player_Hit;                                  // 0x1B70(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UForceFeedbackEffect*                   DamageForceFeedback;                               // 0x1B78(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               DBNOParticles;                                     // 0x1B80(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        Effect_Player_Landed_WindVector_P;                 // 0x1B88(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 SpeechBubbleWidgetClass;                           // 0x1B90(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   LastSpeechText;                                    // 0x1B98(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UClass*                                 DamageCameraShake;                                 // 0x1BB0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          UseAnimTrailsNotifies;                             // 0x1BB8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2BF0[0x3];                                     // 0x1BB9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Time_when_you_ll_be_able_to_splash_again;          // 0x1BBC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class A_WaterMeshBlueprintMaster_C*           CurrentWaterMeshActor;                             // 0x1BC0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             WaterTraceHitLocation;                             // 0x1BC8(0x0080)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                StableVelocityVector;                              // 0x1C48(0x000C)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2BF1[0x4];                                     // 0x1C54(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystem*                        PlayerRunTemplate_Ground;                          // 0x1C58(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        PlayerWalkTemplate_Ground;                         // 0x1C60(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        PlayerRunTemplate_Water;                           // 0x1C68(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        PlayerWalkTemplate_Water;                          // 0x1C70(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMesh*                          Pawn_Charm_Skeletal_Mesh;                          // 0x1C78(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DefaultShieldOpacity;                              // 0x1C80(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2BF2[0x4];                                     // 0x1C84(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystemComponent*               AnimTrailsPS_Ref;                                  // 0x1C88(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Adrenaline_Rush_Color_Outer_Periodic;              // 0x1C90(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     WeaponMaterialOverride;                            // 0x1CA0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Adrenaline_Rush_Color_Inner_Periodic;              // 0x1CA8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          TickWaterLevel;                                    // 0x1CB8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2BF3[0x7];                                     // 0x1CB9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTextureRenderTarget2D*                 WetnessDepthTexture;                               // 0x1CC0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               WaterLevelMID;                                     // 0x1CC8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               WaterDecayMID;                                     // 0x1CD0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Was_RTT_Enabled_Var_Set;                           // 0x1CD8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          Water_Scene_Capture_Enabled;                       // 0x1CD9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2BF4[0x2];                                     // 0x1CDA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         StartingMinCapsuleShadowVis;                       // 0x1CDC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CachedEffect;                                      // 0x1CE0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UMaterialInstanceDynamic*>       WaterInteractionWakeMIDS;                          // 0x1CE8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	TArray<class UStaticMeshComponent*>           WaterInteractionWakeMeshes;                        // 0x1CF8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	float                                         Character_Calve_Length;                            // 0x1D08(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NumberOfCyclingWaterMeshes;                        // 0x1D0C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           WaterTraceImpactNormalAndZHeightLocation;          // 0x1D10(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                PlayerVelocity;                                    // 0x1D20(0x000C)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_PlayerPawn_Generic(int32 EntryPoint);
	void AnimTrailsNotify(bool bActive);
	void AnimTrailsDisable();
	void AnimTrailsSetup(class UParticleSystem* ParticleSystemReference, class FName FirstSocketName, class FName SecondSocketName, float Width);
	void GameplayCue_Shield_Reapplied(EGameplayCueEvent EventType, const struct FGameplayCueParameters& Parameters);
	void GameplayCue_Shield_FullyCharged(EGameplayCueEvent EventType, const struct FGameplayCueParameters& Parameters);
	void GameplayCue_Shield_Destroyed(EGameplayCueEvent EventType, const struct FGameplayCueParameters& Parameters);
	void GameplayCue_Damage_Shielded(EGameplayCueEvent EventType, const struct FGameplayCueParameters& Parameters);
	void GameplayCue_Generic_AdrenalineRush_DirectHeal(EGameplayCueEvent EventType, const struct FGameplayCueParameters& Parameters);
	void Test_Adrenaline_Rush();
	void OnLand_CE();
	void Player_Creates_a_Splash(const struct FTransform& NewTransform);
	void PlayGameplayWindEffect(EPlayerWindParticleEmitters Player_Wind_Particle_Emitter_To_Fire);
	void SpawnDBNOParticles(const struct FVector& ParticleLocation, const struct FVector& HitNormal);
	void FadeOutCapsuleShadow();
	void BindOnDestroyed();
	void CharacterDestroyed(class AActor* DestroyedActor);
	void Entered_WaterVolume();
	void OnDeathServer(float Damage, const struct FGameplayTagContainer& DamageTags, const struct FVector& Momentum, const struct FHitResult& HitInfo, class AController* InstigatedBy, class AActor* DamageCauser, const struct FGameplayEffectContextHandle& EffectContext);
	void Clean_up_DBNO_fx();
	void MultiEndSwap(class AFortWeapon* Param_CurrentWeapon);
	void UnBindWeaponSwap();
	void MultiSwapWeapon(class AFortWeapon* New, class AFortWeapon* Prev);
	void BindWeaponSwap(float InDuration);
	void ClientBindWeaponSwap(class AFortWeapon* NewWeapon, class AFortWeapon* PrevWeapon);
	void ReceiveDestroyed();
	void CleanupGravitySphereFootEffects();
	void OnClearSentence();
	void OnDisplaySentence(const class FText& SpeechText);
	void ReceivePossessed(class AController* NewController);
	void OnBaseChanged(class AActor* NewBase);
	void GameplayCue_Abilities_Activation_DBNOResurrect(EGameplayCueEvent EventType, const struct FGameplayCueParameters& Parameters);
	void InternalSetFirstPersonCamera(bool NewUseFirstPersonCamera);
	void GameplayCue_GravitySphere(EGameplayCueEvent EventType, const struct FGameplayCueParameters& Parameters);
	void SetFirstPersonCamera(bool bNewUseFirstPersonCamera);
	void GameplayCue_Abilities_Activation_Generic_HarvestBuff_Tier2(EGameplayCueEvent EventType, const struct FGameplayCueParameters& Parameters);
	void GameplayCue_Abilities_Activation_Generic_HarvestBuff_Tier1(EGameplayCueEvent EventType, const struct FGameplayCueParameters& Parameters);
	void OnCharacterPartsReinitialized();
	void FootStepRight();
	void FootStepLeft();
	void ReceiveTick(float DeltaSeconds);
	void OnWeaponEquipped(class AFortWeapon* NewWeapon, class AFortWeapon* PrevWeapon);
	void OnDeathPlayEffects(float Damage, const struct FGameplayTagContainer& DamageTags, const struct FVector& Momentum, const struct FHitResult& HitInfo, class AFortPawn* InstigatedBy, class AActor* DamageCauser, const struct FGameplayEffectContextHandle& EffectContext);
	void OnLanded(const struct FHitResult& Hit);
	void OnDamagePlayEffects(float Damage, const struct FGameplayTagContainer& DamageTags, const struct FVector& Momentum, const struct FHitResult& HitInfo, class AFortPawn* InstigatedBy, class AActor* DamageCauser, const struct FGameplayEffectContextHandle& EffectContext);
	void MeleeSwingLeft();
	void MeleeSwingRight();
	void Full_Shield_Health__UpdateFunc();
	void Full_Shield_Health__FinishedFunc();
	void Shield_DamageTimeline__UpdateFunc();
	void Shield_DamageTimeline__FinishedFunc();
	void Shield_ShatterTimeline__UpdateFunc();
	void Shield_ShatterTimeline__FinishedFunc();
	void Shield_Regen_Timeline__UpdateFunc();
	void Shield_Regen_Timeline__FinishedFunc();
	void HealthSweep__UpdateFunc();
	void HealthSweep__FinishedFunc();
	void CapsuleFadeTL__UpdateFunc();
	void CapsuleFadeTL__FinishedFunc();
	void UserConstructionScript();
	void Create_and_Duplicate_Effect_Skeletal_Meshes_Parent(EFortCustomPartType BodyType, class USkeletalMeshComponent*& DuplicatedSkeletalMeshComponent, class UMaterialInterface* Material_to_Apply, TArray<class UMaterialInstanceDynamic*>& Empty_MID_Array, int32 TranslucentSortPriority);
	void FindShieldOpacity();
	void SetShieldMids(float Highlight_Cracks, bool Set_Highlight_Cracks, float Push, bool Set_Push);
	void SetShieldMids_InternalLoop(float Highlight_Cracks, bool Set_Highlight_Cracks, float Push, bool Set_Push, TArray<class UMaterialInstanceDynamic*>& NewParam1);
	void SlaveAMeshToTheBody(class USkeletalMeshComponent* Param_Mesh, class USkeletalMeshComponent* Master);
	void ToggleShieldVisibility();
	void Create_and_Duplicate_Effect_Poseable_Skeletal_Mesh(EFortCustomPartType BodyType, class UMaterialInterface* Material_to_Apply, TArray<class UMaterialInstanceDynamic*>& Empty_MID_Array, int32 TranslucentSortPriority, class UPoseableMeshComponent*& PoseableMesh);
	void Setup_FX_Mesh_Duplicates(class UMaterialInterface*& Material_to_Apply, TArray<class UMaterialInstanceDynamic*>& Charm_MID_Array, class USkeletalMeshComponent*& Charm_Mesh, TArray<class UMaterialInstanceDynamic*>& Head_MID_Array, class USkeletalMeshComponent*& Head_Mesh, TArray<class UMaterialInstanceDynamic*>& Body_MID_Array, class USkeletalMeshComponent*& Body_Mesh, int32 Translucent_Sort_Order, bool Transfer_Material_Parameters);
	void OnRep_On_Player_Built_Floor();
	void SetAdrenalineRushVisibility(bool Visible);
	void DisableWaterLevelTick();
	void Are_the_wind_and_water_RTT_passes_enabled(bool* NewParam);
	void TriggerGameplayWindEmitter(EPlayerWindParticleEmitters Player_Wind_Particle_Emitter_To_Fire);
	void Melee_Effect_Color(struct FVector* Melee_Color_Set);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"PlayerPawn_Generic_C">();
	}
	static class APlayerPawn_Generic_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<APlayerPawn_Generic_C>();
	}
};
static_assert(alignof(APlayerPawn_Generic_C) == 0x000010, "Wrong alignment on APlayerPawn_Generic_C");
static_assert(sizeof(APlayerPawn_Generic_C) == 0x001D30, "Wrong size on APlayerPawn_Generic_C");
static_assert(offsetof(APlayerPawn_Generic_C, UberGraphFrame_PlayerPawn_Generic_C) == 0x001810, "Member 'APlayerPawn_Generic_C::UberGraphFrame_PlayerPawn_Generic_C' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, SplashEffectsForEnteringOrExitingWater) == 0x001818, "Member 'APlayerPawn_Generic_C::SplashEffectsForEnteringOrExitingWater' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, GamplayWindInteractionEffects) == 0x001820, "Member 'APlayerPawn_Generic_C::GamplayWindInteractionEffects' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, Effect_Player_Run_Land) == 0x001828, "Member 'APlayerPawn_Generic_C::Effect_Player_Run_Land' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, Effect_Player_Walk_Land) == 0x001830, "Member 'APlayerPawn_Generic_C::Effect_Player_Walk_Land' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, Effect_Player_Walk_Water) == 0x001838, "Member 'APlayerPawn_Generic_C::Effect_Player_Walk_Water' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, Effect_Player_Run_Water) == 0x001840, "Member 'APlayerPawn_Generic_C::Effect_Player_Run_Water' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, Effect_WaterInteraction_FX) == 0x001848, "Member 'APlayerPawn_Generic_C::Effect_WaterInteraction_FX' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, AnimTrailPS) == 0x001850, "Member 'APlayerPawn_Generic_C::AnimTrailPS' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, HitDamageParticles) == 0x001858, "Member 'APlayerPawn_Generic_C::HitDamageParticles' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, SpeechBubbleComponent) == 0x001860, "Member 'APlayerPawn_Generic_C::SpeechBubbleComponent' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, PlayerLight) == 0x001868, "Member 'APlayerPawn_Generic_C::PlayerLight' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, CapsuleFadeTL_RemoveShadow_018B40864B973FCD649A23BAC2709F23) == 0x001870, "Member 'APlayerPawn_Generic_C::CapsuleFadeTL_RemoveShadow_018B40864B973FCD649A23BAC2709F23' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, CapsuleFadeTL__Direction_018B40864B973FCD649A23BAC2709F23) == 0x001874, "Member 'APlayerPawn_Generic_C::CapsuleFadeTL__Direction_018B40864B973FCD649A23BAC2709F23' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, CapsuleFadeTL) == 0x001878, "Member 'APlayerPawn_Generic_C::CapsuleFadeTL' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, Full_Shield_Health_Push_6222ABB047B8F22E3C9FC983BD70CEA6) == 0x001880, "Member 'APlayerPawn_Generic_C::Full_Shield_Health_Push_6222ABB047B8F22E3C9FC983BD70CEA6' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, Full_Shield_Health_Impact_6222ABB047B8F22E3C9FC983BD70CEA6) == 0x001884, "Member 'APlayerPawn_Generic_C::Full_Shield_Health_Impact_6222ABB047B8F22E3C9FC983BD70CEA6' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, Full_Shield_Health__Direction_6222ABB047B8F22E3C9FC983BD70CEA6) == 0x001888, "Member 'APlayerPawn_Generic_C::Full_Shield_Health__Direction_6222ABB047B8F22E3C9FC983BD70CEA6' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, Full_Shield_Health) == 0x001890, "Member 'APlayerPawn_Generic_C::Full_Shield_Health' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, Shield_DamageTimeline_Impact_6DC09F024CD096186AE1389FB8061E30) == 0x001898, "Member 'APlayerPawn_Generic_C::Shield_DamageTimeline_Impact_6DC09F024CD096186AE1389FB8061E30' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, Shield_DamageTimeline__Direction_6DC09F024CD096186AE1389FB8061E30) == 0x00189C, "Member 'APlayerPawn_Generic_C::Shield_DamageTimeline__Direction_6DC09F024CD096186AE1389FB8061E30' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, Shield_DamageTimeline) == 0x0018A0, "Member 'APlayerPawn_Generic_C::Shield_DamageTimeline' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, Shield_Regen_Timeline_Opacity_3DC9958C47D4CEFA60E68699D92BA374) == 0x0018A8, "Member 'APlayerPawn_Generic_C::Shield_Regen_Timeline_Opacity_3DC9958C47D4CEFA60E68699D92BA374' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, Shield_Regen_Timeline_Push_3DC9958C47D4CEFA60E68699D92BA374) == 0x0018AC, "Member 'APlayerPawn_Generic_C::Shield_Regen_Timeline_Push_3DC9958C47D4CEFA60E68699D92BA374' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, Shield_Regen_Timeline__Direction_3DC9958C47D4CEFA60E68699D92BA374) == 0x0018B0, "Member 'APlayerPawn_Generic_C::Shield_Regen_Timeline__Direction_3DC9958C47D4CEFA60E68699D92BA374' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, Shield_Regen_Timeline) == 0x0018B8, "Member 'APlayerPawn_Generic_C::Shield_Regen_Timeline' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, Shield_ShatterTimeline_Push_F3223F2D4A6B8642F950B0A15F8C6699) == 0x0018C0, "Member 'APlayerPawn_Generic_C::Shield_ShatterTimeline_Push_F3223F2D4A6B8642F950B0A15F8C6699' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, Shield_ShatterTimeline_Opacity_F3223F2D4A6B8642F950B0A15F8C6699) == 0x0018C4, "Member 'APlayerPawn_Generic_C::Shield_ShatterTimeline_Opacity_F3223F2D4A6B8642F950B0A15F8C6699' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, Shield_ShatterTimeline_HighlightCracks_F3223F2D4A6B8642F950B0A15F8C6699) == 0x0018C8, "Member 'APlayerPawn_Generic_C::Shield_ShatterTimeline_HighlightCracks_F3223F2D4A6B8642F950B0A15F8C6699' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, Shield_ShatterTimeline__Direction_F3223F2D4A6B8642F950B0A15F8C6699) == 0x0018CC, "Member 'APlayerPawn_Generic_C::Shield_ShatterTimeline__Direction_F3223F2D4A6B8642F950B0A15F8C6699' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, Shield_ShatterTimeline) == 0x0018D0, "Member 'APlayerPawn_Generic_C::Shield_ShatterTimeline' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, HealthSweep_SafetyOpacity_2A96303441845D0EAAAB1EB68183F8A8) == 0x0018D8, "Member 'APlayerPawn_Generic_C::HealthSweep_SafetyOpacity_2A96303441845D0EAAAB1EB68183F8A8' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, HealthSweep_Sweep_2A96303441845D0EAAAB1EB68183F8A8) == 0x0018DC, "Member 'APlayerPawn_Generic_C::HealthSweep_Sweep_2A96303441845D0EAAAB1EB68183F8A8' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, HealthSweep__Direction_2A96303441845D0EAAAB1EB68183F8A8) == 0x0018E0, "Member 'APlayerPawn_Generic_C::HealthSweep__Direction_2A96303441845D0EAAAB1EB68183F8A8' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, HealthSweep) == 0x0018E8, "Member 'APlayerPawn_Generic_C::HealthSweep' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, ScreenEffect_PlayerHealthDamageDirection) == 0x0018F0, "Member 'APlayerPawn_Generic_C::ScreenEffect_PlayerHealthDamageDirection' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, ScreenEffect_PlayerHealthDamage) == 0x0018F8, "Member 'APlayerPawn_Generic_C::ScreenEffect_PlayerHealthDamage' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, ScreenEffect_PlayerShieldDamageDirection) == 0x001900, "Member 'APlayerPawn_Generic_C::ScreenEffect_PlayerShieldDamageDirection' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, ScreenEffect_PlayerShieldDamage) == 0x001908, "Member 'APlayerPawn_Generic_C::ScreenEffect_PlayerShieldDamage' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, HitByHuskProjectileClass) == 0x001910, "Member 'APlayerPawn_Generic_C::HitByHuskProjectileClass' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, HitByHuskRangedSound) == 0x001918, "Member 'APlayerPawn_Generic_C::HitByHuskRangedSound' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, HitByHuskMeleeSound) == 0x001920, "Member 'APlayerPawn_Generic_C::HitByHuskMeleeSound' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, SoulSuckVictimMontage) == 0x001928, "Member 'APlayerPawn_Generic_C::SoulSuckVictimMontage' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, PlayerSpeed) == 0x001930, "Member 'APlayerPawn_Generic_C::PlayerSpeed' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, Run_Particle_Activate_Speed) == 0x001934, "Member 'APlayerPawn_Generic_C::Run_Particle_Activate_Speed' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, Walk_Dust_Activate_Speed) == 0x001938, "Member 'APlayerPawn_Generic_C::Walk_Dust_Activate_Speed' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, Walk_Particle_Reset_Speed) == 0x00193C, "Member 'APlayerPawn_Generic_C::Walk_Particle_Reset_Speed' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, PreviousVelocityVector) == 0x001940, "Member 'APlayerPawn_Generic_C::PreviousVelocityVector' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, CanSpawnRunKickupFX_) == 0x00194C, "Member 'APlayerPawn_Generic_C::CanSpawnRunKickupFX_' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, CanSpawnWalkKickupFX_) == 0x00194D, "Member 'APlayerPawn_Generic_C::CanSpawnWalkKickupFX_' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, CanSpawnDustLandFX_) == 0x00194E, "Member 'APlayerPawn_Generic_C::CanSpawnDustLandFX_' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, IsInWater) == 0x00194F, "Member 'APlayerPawn_Generic_C::IsInWater' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, RunWalkParticleRotation) == 0x001950, "Member 'APlayerPawn_Generic_C::RunWalkParticleRotation' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, IsNinjaInShadowStance_) == 0x00195C, "Member 'APlayerPawn_Generic_C::IsNinjaInShadowStance_' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, GameplayTagsForHitByHuskMeleeSound) == 0x001960, "Member 'APlayerPawn_Generic_C::GameplayTagsForHitByHuskMeleeSound' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, Adrenaline_Material) == 0x001980, "Member 'APlayerPawn_Generic_C::Adrenaline_Material' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, AdrenalineRush_HeadAnimatingMIDS) == 0x001988, "Member 'APlayerPawn_Generic_C::AdrenalineRush_HeadAnimatingMIDS' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, AdrenalineRush_BodyAnimatingMIDS) == 0x001998, "Member 'APlayerPawn_Generic_C::AdrenalineRush_BodyAnimatingMIDS' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, Adrenaline_Rush_Color_Outer_Direct) == 0x0019A8, "Member 'APlayerPawn_Generic_C::Adrenaline_Rush_Color_Outer_Direct' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, Adrenaline_Rush_Color_Inner_Direct) == 0x0019B8, "Member 'APlayerPawn_Generic_C::Adrenaline_Rush_Color_Inner_Direct' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, Adrenaline_Rush_WPO_Offset) == 0x0019C8, "Member 'APlayerPawn_Generic_C::Adrenaline_Rush_WPO_Offset' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, P_AdrenalineRushSparklesRunning) == 0x0019D0, "Member 'APlayerPawn_Generic_C::P_AdrenalineRushSparklesRunning' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, Shield_Material) == 0x0019D8, "Member 'APlayerPawn_Generic_C::Shield_Material' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, BodyShieldMIDArray) == 0x0019E0, "Member 'APlayerPawn_Generic_C::BodyShieldMIDArray' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, HeadShieldMIDArray) == 0x0019F0, "Member 'APlayerPawn_Generic_C::HeadShieldMIDArray' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, Shield_Active) == 0x001A00, "Member 'APlayerPawn_Generic_C::Shield_Active' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, WaterCounter) == 0x001A04, "Member 'APlayerPawn_Generic_C::WaterCounter' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, Tick_Delta_Seconds) == 0x001A08, "Member 'APlayerPawn_Generic_C::Tick_Delta_Seconds' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, Shield_Damage_Wave_Animation) == 0x001A0C, "Member 'APlayerPawn_Generic_C::Shield_Damage_Wave_Animation' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, Overall_Shield_Damage_Wave_Animation_Length) == 0x001A10, "Member 'APlayerPawn_Generic_C::Overall_Shield_Damage_Wave_Animation_Length' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, Size) == 0x001A14, "Member 'APlayerPawn_Generic_C::Size' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, Dying) == 0x001A18, "Member 'APlayerPawn_Generic_C::Dying' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, CanRippleAgain) == 0x001A19, "Member 'APlayerPawn_Generic_C::CanRippleAgain' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, Sound_Shield_Impact) == 0x001A20, "Member 'APlayerPawn_Generic_C::Sound_Shield_Impact' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, Sound_Shield_Destroyed) == 0x001A28, "Member 'APlayerPawn_Generic_C::Sound_Shield_Destroyed' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, Sound_Shield_FullyCharged) == 0x001A30, "Member 'APlayerPawn_Generic_C::Sound_Shield_FullyCharged' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, Sound_Shield_StartRecharge) == 0x001A38, "Member 'APlayerPawn_Generic_C::Sound_Shield_StartRecharge' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, Shield_Shatter_Opacity) == 0x001A40, "Member 'APlayerPawn_Generic_C::Shield_Shatter_Opacity' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, Regen_Opacity) == 0x001A44, "Member 'APlayerPawn_Generic_C::Regen_Opacity' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, Damage_Opacity) == 0x001A48, "Member 'APlayerPawn_Generic_C::Damage_Opacity' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, Default_Shield_opacity) == 0x001A4C, "Member 'APlayerPawn_Generic_C::Default_Shield_opacity' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, Shield_PushMinValue) == 0x001A50, "Member 'APlayerPawn_Generic_C::Shield_PushMinValue' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, ShieldVisible_Hit) == 0x001A54, "Member 'APlayerPawn_Generic_C::ShieldVisible_Hit' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, ShieldVisible_Recover) == 0x001A55, "Member 'APlayerPawn_Generic_C::ShieldVisible_Recover' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, ShieldVisible_Shatter) == 0x001A56, "Member 'APlayerPawn_Generic_C::ShieldVisible_Shatter' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, ShieldVisible_FullHealth) == 0x001A57, "Member 'APlayerPawn_Generic_C::ShieldVisible_FullHealth' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, Fully_Regened_Shield_health_Opacity) == 0x001A58, "Member 'APlayerPawn_Generic_C::Fully_Regened_Shield_health_Opacity' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, TC_GameplayCueDamageShielded) == 0x001A60, "Member 'APlayerPawn_Generic_C::TC_GameplayCueDamageShielded' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, LatestDamageIsShieldDamage) == 0x001A80, "Member 'APlayerPawn_Generic_C::LatestDamageIsShieldDamage' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, Damage_Taken) == 0x001A84, "Member 'APlayerPawn_Generic_C::Damage_Taken' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, Last_Shield_Damage_Time) == 0x001A88, "Member 'APlayerPawn_Generic_C::Last_Shield_Damage_Time' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, CharmShieldMIDArray) == 0x001A90, "Member 'APlayerPawn_Generic_C::CharmShieldMIDArray' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, BodyValid) == 0x001AA0, "Member 'APlayerPawn_Generic_C::BodyValid' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, BackpackValid) == 0x001AA1, "Member 'APlayerPawn_Generic_C::BackpackValid' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, HatValid) == 0x001AA2, "Member 'APlayerPawn_Generic_C::HatValid' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, FaceValid) == 0x001AA3, "Member 'APlayerPawn_Generic_C::FaceValid' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, CharmValid) == 0x001AA4, "Member 'APlayerPawn_Generic_C::CharmValid' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, HeadValid) == 0x001AA5, "Member 'APlayerPawn_Generic_C::HeadValid' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, AdrenalineRush_CharmAnimatingMIDS) == 0x001AA8, "Member 'APlayerPawn_Generic_C::AdrenalineRush_CharmAnimatingMIDS' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, Adrenaline_Rush_MID_Collection) == 0x001AB8, "Member 'APlayerPawn_Generic_C::Adrenaline_Rush_MID_Collection' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, P_DBNOResurrect) == 0x001AC8, "Member 'APlayerPawn_Generic_C::P_DBNOResurrect' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, DBNOResurrectSound) == 0x001AD0, "Member 'APlayerPawn_Generic_C::DBNOResurrectSound' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, On_Player_Built_Floor) == 0x001AD8, "Member 'APlayerPawn_Generic_C::On_Player_Built_Floor' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, Event_NeedRoadsActive) == 0x001AE0, "Member 'APlayerPawn_Generic_C::Event_NeedRoadsActive' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, Event_NeedRoadsDeactive) == 0x001AE8, "Member 'APlayerPawn_Generic_C::Event_NeedRoadsDeactive' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, TC_WhereWereGoingWeNeedRoads) == 0x001AF0, "Member 'APlayerPawn_Generic_C::TC_WhereWereGoingWeNeedRoads' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, Effect_Player_LandedDust) == 0x001B10, "Member 'APlayerPawn_Generic_C::Effect_Player_LandedDust' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, P_GravitySphere_LeftFoot) == 0x001B18, "Member 'APlayerPawn_Generic_C::P_GravitySphere_LeftFoot' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, TempArray) == 0x001B20, "Member 'APlayerPawn_Generic_C::TempArray' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, P_GravitySphere_RightFoot) == 0x001B30, "Member 'APlayerPawn_Generic_C::P_GravitySphere_RightFoot' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, Effect_Player_GravitySphereFeet) == 0x001B38, "Member 'APlayerPawn_Generic_C::Effect_Player_GravitySphereFeet' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, Shield_BodySkeletalMesh) == 0x001B40, "Member 'APlayerPawn_Generic_C::Shield_BodySkeletalMesh' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, Shield_HeadSkeletalMesh) == 0x001B48, "Member 'APlayerPawn_Generic_C::Shield_HeadSkeletalMesh' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, Shield_CharmSkeletalMesh) == 0x001B50, "Member 'APlayerPawn_Generic_C::Shield_CharmSkeletalMesh' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, Adrenaline_Rush_Body) == 0x001B58, "Member 'APlayerPawn_Generic_C::Adrenaline_Rush_Body' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, Adrenaline_Rush_Head) == 0x001B60, "Member 'APlayerPawn_Generic_C::Adrenaline_Rush_Head' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, Adrenaline_Rush_Charm) == 0x001B68, "Member 'APlayerPawn_Generic_C::Adrenaline_Rush_Charm' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, Sound_Player_Hit) == 0x001B70, "Member 'APlayerPawn_Generic_C::Sound_Player_Hit' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, DamageForceFeedback) == 0x001B78, "Member 'APlayerPawn_Generic_C::DamageForceFeedback' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, DBNOParticles) == 0x001B80, "Member 'APlayerPawn_Generic_C::DBNOParticles' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, Effect_Player_Landed_WindVector_P) == 0x001B88, "Member 'APlayerPawn_Generic_C::Effect_Player_Landed_WindVector_P' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, SpeechBubbleWidgetClass) == 0x001B90, "Member 'APlayerPawn_Generic_C::SpeechBubbleWidgetClass' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, LastSpeechText) == 0x001B98, "Member 'APlayerPawn_Generic_C::LastSpeechText' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, DamageCameraShake) == 0x001BB0, "Member 'APlayerPawn_Generic_C::DamageCameraShake' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, UseAnimTrailsNotifies) == 0x001BB8, "Member 'APlayerPawn_Generic_C::UseAnimTrailsNotifies' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, Time_when_you_ll_be_able_to_splash_again) == 0x001BBC, "Member 'APlayerPawn_Generic_C::Time_when_you_ll_be_able_to_splash_again' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, CurrentWaterMeshActor) == 0x001BC0, "Member 'APlayerPawn_Generic_C::CurrentWaterMeshActor' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, WaterTraceHitLocation) == 0x001BC8, "Member 'APlayerPawn_Generic_C::WaterTraceHitLocation' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, StableVelocityVector) == 0x001C48, "Member 'APlayerPawn_Generic_C::StableVelocityVector' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, PlayerRunTemplate_Ground) == 0x001C58, "Member 'APlayerPawn_Generic_C::PlayerRunTemplate_Ground' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, PlayerWalkTemplate_Ground) == 0x001C60, "Member 'APlayerPawn_Generic_C::PlayerWalkTemplate_Ground' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, PlayerRunTemplate_Water) == 0x001C68, "Member 'APlayerPawn_Generic_C::PlayerRunTemplate_Water' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, PlayerWalkTemplate_Water) == 0x001C70, "Member 'APlayerPawn_Generic_C::PlayerWalkTemplate_Water' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, Pawn_Charm_Skeletal_Mesh) == 0x001C78, "Member 'APlayerPawn_Generic_C::Pawn_Charm_Skeletal_Mesh' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, DefaultShieldOpacity) == 0x001C80, "Member 'APlayerPawn_Generic_C::DefaultShieldOpacity' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, AnimTrailsPS_Ref) == 0x001C88, "Member 'APlayerPawn_Generic_C::AnimTrailsPS_Ref' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, Adrenaline_Rush_Color_Outer_Periodic) == 0x001C90, "Member 'APlayerPawn_Generic_C::Adrenaline_Rush_Color_Outer_Periodic' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, WeaponMaterialOverride) == 0x001CA0, "Member 'APlayerPawn_Generic_C::WeaponMaterialOverride' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, Adrenaline_Rush_Color_Inner_Periodic) == 0x001CA8, "Member 'APlayerPawn_Generic_C::Adrenaline_Rush_Color_Inner_Periodic' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, TickWaterLevel) == 0x001CB8, "Member 'APlayerPawn_Generic_C::TickWaterLevel' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, WetnessDepthTexture) == 0x001CC0, "Member 'APlayerPawn_Generic_C::WetnessDepthTexture' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, WaterLevelMID) == 0x001CC8, "Member 'APlayerPawn_Generic_C::WaterLevelMID' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, WaterDecayMID) == 0x001CD0, "Member 'APlayerPawn_Generic_C::WaterDecayMID' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, Was_RTT_Enabled_Var_Set) == 0x001CD8, "Member 'APlayerPawn_Generic_C::Was_RTT_Enabled_Var_Set' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, Water_Scene_Capture_Enabled) == 0x001CD9, "Member 'APlayerPawn_Generic_C::Water_Scene_Capture_Enabled' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, StartingMinCapsuleShadowVis) == 0x001CDC, "Member 'APlayerPawn_Generic_C::StartingMinCapsuleShadowVis' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, CachedEffect) == 0x001CE0, "Member 'APlayerPawn_Generic_C::CachedEffect' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, WaterInteractionWakeMIDS) == 0x001CE8, "Member 'APlayerPawn_Generic_C::WaterInteractionWakeMIDS' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, WaterInteractionWakeMeshes) == 0x001CF8, "Member 'APlayerPawn_Generic_C::WaterInteractionWakeMeshes' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, Character_Calve_Length) == 0x001D08, "Member 'APlayerPawn_Generic_C::Character_Calve_Length' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, NumberOfCyclingWaterMeshes) == 0x001D0C, "Member 'APlayerPawn_Generic_C::NumberOfCyclingWaterMeshes' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, WaterTraceImpactNormalAndZHeightLocation) == 0x001D10, "Member 'APlayerPawn_Generic_C::WaterTraceImpactNormalAndZHeightLocation' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Generic_C, PlayerVelocity) == 0x001D20, "Member 'APlayerPawn_Generic_C::PlayerVelocity' has a wrong offset!");

}

