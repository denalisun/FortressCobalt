#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: OptionsMenuSetting

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "FortniteUI_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass OptionsMenuSetting.OptionsMenuSetting_C
// 0x00B0 (0x02D0 - 0x0220)
class UOptionsMenuSetting_C final : public UFortOptionsMenuSetting
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0220(0x0008)(Transient, DuplicateTransient)
	class UButton*                                Button_0;                                          // 0x0228(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UIconTextButton_C*                      ButtonLeft;                                        // 0x0230(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UIconTextButton_C*                      ButtonRight;                                       // 0x0238(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonWidgetSwitcher*                  CommonWidgetSwitcher_0;                            // 0x0240(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UAnalogSlider*                          MenuSlider;                                        // 0x0248(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 SliderBackground;                                  // 0x0250(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       SliderText;                                        // 0x0258(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       SliderValue;                                       // 0x0260(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextRotator_C*                         TextRotator;                                       // 0x0268(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	UMulticastDelegateProperty_                   SettingValueChanged;                               // 0x0270(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	float                                         Total_Width;                                       // 0x0280(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_36A7[0x4];                                     // 0x0284(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               Slider_Texture;                                    // 0x0288(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCommonTextBlock*                       Tab_Tooltip_Text;                                  // 0x0290(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   Hover_Text;                                        // 0x0298(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	int32                                         MinIntegralDigits;                                 // 0x02B0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MaxIntegralDigits;                                 // 0x02B4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MinFractionalDigits;                               // 0x02B8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MaxFractionalDigits;                               // 0x02BC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MaxSensitivityValue;                               // 0x02C0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MinSensitivityValue;                               // 0x02C4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ERoundingMode                                 RoundingMode;                                      // 0x02C8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void SettingValueChanged__DelegateSignature(float Slider_Value);
	void ExecuteUbergraph_OptionsMenuSetting(int32 EntryPoint);
	void BndEvt__ButtonRight_K2Node_ComponentBoundEvent_15_CommonButtonClicked__DelegateSignature(class UCommonButton* Button);
	void BndEvt__ButtonLeft_K2Node_ComponentBoundEvent_1_CommonButtonClicked__DelegateSignature(class UCommonButton* Button);
	void OnReleaseToPool();
	void SetData(class UObject* InData, class UCommonListView* OwningList);
	void BndEvt__TextRotator_K2Node_ComponentBoundEvent_20_OnRotated__DelegateSignature(int32 Value);
	void BndEvt__MenuSlider_K2Node_ComponentBoundEvent_9_OnFloatValueChangedEvent__DelegateSignature(float Value);
	void BndEvt__MenuSlider_K2Node_ComponentBoundEvent_124_OnFloatValueChangedEvent__DelegateSignature(float Value);
	void BndEvt__MenuSlider_K2Node_ComponentBoundEvent_107_OnControllerCaptureEndEvent__DelegateSignature();
	void BndEvt__MenuSlider_K2Node_ComponentBoundEvent_86_OnMouseCaptureEndEvent__DelegateSignature();
	void OnMouseEnter(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent);
	void OnMouseLeave(const struct FPointerEvent& MouseEvent);
	void Construct();
	void Reset();
	void ToggleExpansion();
	void SetSelected(bool bSelected);
	void SetIndexInList(int32 InIndexInList);
	void SetExpanded(bool bExpanded);
	void RegisterOnClicked(const TDelegate<void(class UUserWidget* Widget)>& Callback);
	void Private_OnExpanderArrowShiftClicked();
	void OnAcquireFromPool();
	void Center_on_Widget();
	struct FEventReply OnFocusReceived(const struct FGeometry& MyGeometry, const struct FFocusEvent& InFocusEvent);
	void Update_Setting(class UCommonTextBlock* Tooltip_Text_Block);
	void UpdateSize();

	class UObject* GetData() const;
	bool IsItemExpanded() const;
	int32 DoesItemHaveChildren() const;
	int32 GetIndentLevel() const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"OptionsMenuSetting_C">();
	}
	static class UOptionsMenuSetting_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOptionsMenuSetting_C>();
	}
};
static_assert(alignof(UOptionsMenuSetting_C) == 0x000008, "Wrong alignment on UOptionsMenuSetting_C");
static_assert(sizeof(UOptionsMenuSetting_C) == 0x0002D0, "Wrong size on UOptionsMenuSetting_C");
static_assert(offsetof(UOptionsMenuSetting_C, UberGraphFrame) == 0x000220, "Member 'UOptionsMenuSetting_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UOptionsMenuSetting_C, Button_0) == 0x000228, "Member 'UOptionsMenuSetting_C::Button_0' has a wrong offset!");
static_assert(offsetof(UOptionsMenuSetting_C, ButtonLeft) == 0x000230, "Member 'UOptionsMenuSetting_C::ButtonLeft' has a wrong offset!");
static_assert(offsetof(UOptionsMenuSetting_C, ButtonRight) == 0x000238, "Member 'UOptionsMenuSetting_C::ButtonRight' has a wrong offset!");
static_assert(offsetof(UOptionsMenuSetting_C, CommonWidgetSwitcher_0) == 0x000240, "Member 'UOptionsMenuSetting_C::CommonWidgetSwitcher_0' has a wrong offset!");
static_assert(offsetof(UOptionsMenuSetting_C, MenuSlider) == 0x000248, "Member 'UOptionsMenuSetting_C::MenuSlider' has a wrong offset!");
static_assert(offsetof(UOptionsMenuSetting_C, SliderBackground) == 0x000250, "Member 'UOptionsMenuSetting_C::SliderBackground' has a wrong offset!");
static_assert(offsetof(UOptionsMenuSetting_C, SliderText) == 0x000258, "Member 'UOptionsMenuSetting_C::SliderText' has a wrong offset!");
static_assert(offsetof(UOptionsMenuSetting_C, SliderValue) == 0x000260, "Member 'UOptionsMenuSetting_C::SliderValue' has a wrong offset!");
static_assert(offsetof(UOptionsMenuSetting_C, TextRotator) == 0x000268, "Member 'UOptionsMenuSetting_C::TextRotator' has a wrong offset!");
static_assert(offsetof(UOptionsMenuSetting_C, SettingValueChanged) == 0x000270, "Member 'UOptionsMenuSetting_C::SettingValueChanged' has a wrong offset!");
static_assert(offsetof(UOptionsMenuSetting_C, Total_Width) == 0x000280, "Member 'UOptionsMenuSetting_C::Total_Width' has a wrong offset!");
static_assert(offsetof(UOptionsMenuSetting_C, Slider_Texture) == 0x000288, "Member 'UOptionsMenuSetting_C::Slider_Texture' has a wrong offset!");
static_assert(offsetof(UOptionsMenuSetting_C, Tab_Tooltip_Text) == 0x000290, "Member 'UOptionsMenuSetting_C::Tab_Tooltip_Text' has a wrong offset!");
static_assert(offsetof(UOptionsMenuSetting_C, Hover_Text) == 0x000298, "Member 'UOptionsMenuSetting_C::Hover_Text' has a wrong offset!");
static_assert(offsetof(UOptionsMenuSetting_C, MinIntegralDigits) == 0x0002B0, "Member 'UOptionsMenuSetting_C::MinIntegralDigits' has a wrong offset!");
static_assert(offsetof(UOptionsMenuSetting_C, MaxIntegralDigits) == 0x0002B4, "Member 'UOptionsMenuSetting_C::MaxIntegralDigits' has a wrong offset!");
static_assert(offsetof(UOptionsMenuSetting_C, MinFractionalDigits) == 0x0002B8, "Member 'UOptionsMenuSetting_C::MinFractionalDigits' has a wrong offset!");
static_assert(offsetof(UOptionsMenuSetting_C, MaxFractionalDigits) == 0x0002BC, "Member 'UOptionsMenuSetting_C::MaxFractionalDigits' has a wrong offset!");
static_assert(offsetof(UOptionsMenuSetting_C, MaxSensitivityValue) == 0x0002C0, "Member 'UOptionsMenuSetting_C::MaxSensitivityValue' has a wrong offset!");
static_assert(offsetof(UOptionsMenuSetting_C, MinSensitivityValue) == 0x0002C4, "Member 'UOptionsMenuSetting_C::MinSensitivityValue' has a wrong offset!");
static_assert(offsetof(UOptionsMenuSetting_C, RoundingMode) == 0x0002C8, "Member 'UOptionsMenuSetting_C::RoundingMode' has a wrong offset!");

}

