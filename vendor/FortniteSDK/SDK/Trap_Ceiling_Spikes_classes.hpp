#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Trap_Ceiling_Spikes

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "FortniteGame_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass Trap_Ceiling_Spikes.Trap_Ceiling_Spikes_C
// 0x00B8 (0x0FD0 - 0x0F18)
class ATrap_Ceiling_Spikes_C final : public ABuildingTrapCeiling
{
public:
	uint8                                         Pad_3FB1[0x8];                                     // 0x0F18(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0F20(0x0008)(Transient, DuplicateTransient)
	class UStaticMeshComponent*                   Spike_Mesh;                                        // 0x0F28(0x0008)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          Trigger;                                           // 0x0F30(0x0008)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        TraceLocation;                                     // 0x0F38(0x0008)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        Root;                                              // 0x0F40(0x0008)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         ResetSpikes_LERP_B972DA5E46CD8AF9C0846C9688D21D08; // 0x0F48(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            ResetSpikes__Direction_B972DA5E46CD8AF9C0846C9688D21D08; // 0x0F4C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3FB2[0x3];                                     // 0x0F4D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     ResetSpikes;                                       // 0x0F50(0x0008)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Retract_LERP_A98FB7C244D5AEB5FA8508BA3FC97EBF;     // 0x0F58(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Retract__Direction_A98FB7C244D5AEB5FA8508BA3FC97EBF; // 0x0F5C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3FB3[0x3];                                     // 0x0F5D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Retract;                                           // 0x0F60(0x0008)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Fire_LERP_99DF8D624D8879F22C8EDA82317252E5;        // 0x0F68(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Fire__Direction_99DF8D624D8879F22C8EDA82317252E5;  // 0x0F6C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3FB4[0x3];                                     // 0x0F6D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Fire;                                              // 0x0F70(0x0008)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               SpikesMID;                                         // 0x0F78(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SweepExponent;                                     // 0x0F80(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           SweepColor;                                        // 0x0F84(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SweepSpeed;                                        // 0x0F94(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundCue*                              Trap_Active_Sound;                                 // 0x0F98(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SpikeRestingScale;                                 // 0x0FA0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3FB5[0x4];                                     // 0x0FA4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundCue*                              Trap_Fire_Sound;                                   // 0x0FA8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SpikeActiveScale;                                  // 0x0FB0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SpikeHoldOnFireLength;                             // 0x0FB4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundCue*                              Reload_Sound;                                      // 0x0FB8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundCue*                              Trap_Explode_Sound;                                // 0x0FC0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundCue*                              Place_Trap_Sound;                                  // 0x0FC8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_Trap_Ceiling_Spikes(int32 EntryPoint);
	void OnWorldReady();
	void OnOutOfDurability();
	void GameplayCue_Abilities_Activation_Traps_ActivateTrap(EGameplayCueEvent EventType, const struct FGameplayCueParameters& Parameters);
	void OnFinishedBuilding();
	void OnPlaced();
	void OnReloadEnd();
	void ResetSpikes__UpdateFunc();
	void ResetSpikes__FinishedFunc();
	void Retract__Sounds__EventFunc();
	void Retract__UpdateFunc();
	void Retract__FinishedFunc();
	void Fire__UpdateFunc();
	void Fire__FinishedFunc();
	void UserConstructionScript();
	void SetSpikePosition(float NewSpikePosition);
	void MaterialSweepOnSpikes(float Param_SweepSpeed, const struct FLinearColor& Param_SweepColor, float Param_SweepExponent);

	struct FTransform GetFireLocationAndRotation() const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Trap_Ceiling_Spikes_C">();
	}
	static class ATrap_Ceiling_Spikes_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ATrap_Ceiling_Spikes_C>();
	}
};
static_assert(alignof(ATrap_Ceiling_Spikes_C) == 0x000008, "Wrong alignment on ATrap_Ceiling_Spikes_C");
static_assert(sizeof(ATrap_Ceiling_Spikes_C) == 0x000FD0, "Wrong size on ATrap_Ceiling_Spikes_C");
static_assert(offsetof(ATrap_Ceiling_Spikes_C, UberGraphFrame) == 0x000F20, "Member 'ATrap_Ceiling_Spikes_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ATrap_Ceiling_Spikes_C, Spike_Mesh) == 0x000F28, "Member 'ATrap_Ceiling_Spikes_C::Spike_Mesh' has a wrong offset!");
static_assert(offsetof(ATrap_Ceiling_Spikes_C, Trigger) == 0x000F30, "Member 'ATrap_Ceiling_Spikes_C::Trigger' has a wrong offset!");
static_assert(offsetof(ATrap_Ceiling_Spikes_C, TraceLocation) == 0x000F38, "Member 'ATrap_Ceiling_Spikes_C::TraceLocation' has a wrong offset!");
static_assert(offsetof(ATrap_Ceiling_Spikes_C, Root) == 0x000F40, "Member 'ATrap_Ceiling_Spikes_C::Root' has a wrong offset!");
static_assert(offsetof(ATrap_Ceiling_Spikes_C, ResetSpikes_LERP_B972DA5E46CD8AF9C0846C9688D21D08) == 0x000F48, "Member 'ATrap_Ceiling_Spikes_C::ResetSpikes_LERP_B972DA5E46CD8AF9C0846C9688D21D08' has a wrong offset!");
static_assert(offsetof(ATrap_Ceiling_Spikes_C, ResetSpikes__Direction_B972DA5E46CD8AF9C0846C9688D21D08) == 0x000F4C, "Member 'ATrap_Ceiling_Spikes_C::ResetSpikes__Direction_B972DA5E46CD8AF9C0846C9688D21D08' has a wrong offset!");
static_assert(offsetof(ATrap_Ceiling_Spikes_C, ResetSpikes) == 0x000F50, "Member 'ATrap_Ceiling_Spikes_C::ResetSpikes' has a wrong offset!");
static_assert(offsetof(ATrap_Ceiling_Spikes_C, Retract_LERP_A98FB7C244D5AEB5FA8508BA3FC97EBF) == 0x000F58, "Member 'ATrap_Ceiling_Spikes_C::Retract_LERP_A98FB7C244D5AEB5FA8508BA3FC97EBF' has a wrong offset!");
static_assert(offsetof(ATrap_Ceiling_Spikes_C, Retract__Direction_A98FB7C244D5AEB5FA8508BA3FC97EBF) == 0x000F5C, "Member 'ATrap_Ceiling_Spikes_C::Retract__Direction_A98FB7C244D5AEB5FA8508BA3FC97EBF' has a wrong offset!");
static_assert(offsetof(ATrap_Ceiling_Spikes_C, Retract) == 0x000F60, "Member 'ATrap_Ceiling_Spikes_C::Retract' has a wrong offset!");
static_assert(offsetof(ATrap_Ceiling_Spikes_C, Fire_LERP_99DF8D624D8879F22C8EDA82317252E5) == 0x000F68, "Member 'ATrap_Ceiling_Spikes_C::Fire_LERP_99DF8D624D8879F22C8EDA82317252E5' has a wrong offset!");
static_assert(offsetof(ATrap_Ceiling_Spikes_C, Fire__Direction_99DF8D624D8879F22C8EDA82317252E5) == 0x000F6C, "Member 'ATrap_Ceiling_Spikes_C::Fire__Direction_99DF8D624D8879F22C8EDA82317252E5' has a wrong offset!");
static_assert(offsetof(ATrap_Ceiling_Spikes_C, Fire) == 0x000F70, "Member 'ATrap_Ceiling_Spikes_C::Fire' has a wrong offset!");
static_assert(offsetof(ATrap_Ceiling_Spikes_C, SpikesMID) == 0x000F78, "Member 'ATrap_Ceiling_Spikes_C::SpikesMID' has a wrong offset!");
static_assert(offsetof(ATrap_Ceiling_Spikes_C, SweepExponent) == 0x000F80, "Member 'ATrap_Ceiling_Spikes_C::SweepExponent' has a wrong offset!");
static_assert(offsetof(ATrap_Ceiling_Spikes_C, SweepColor) == 0x000F84, "Member 'ATrap_Ceiling_Spikes_C::SweepColor' has a wrong offset!");
static_assert(offsetof(ATrap_Ceiling_Spikes_C, SweepSpeed) == 0x000F94, "Member 'ATrap_Ceiling_Spikes_C::SweepSpeed' has a wrong offset!");
static_assert(offsetof(ATrap_Ceiling_Spikes_C, Trap_Active_Sound) == 0x000F98, "Member 'ATrap_Ceiling_Spikes_C::Trap_Active_Sound' has a wrong offset!");
static_assert(offsetof(ATrap_Ceiling_Spikes_C, SpikeRestingScale) == 0x000FA0, "Member 'ATrap_Ceiling_Spikes_C::SpikeRestingScale' has a wrong offset!");
static_assert(offsetof(ATrap_Ceiling_Spikes_C, Trap_Fire_Sound) == 0x000FA8, "Member 'ATrap_Ceiling_Spikes_C::Trap_Fire_Sound' has a wrong offset!");
static_assert(offsetof(ATrap_Ceiling_Spikes_C, SpikeActiveScale) == 0x000FB0, "Member 'ATrap_Ceiling_Spikes_C::SpikeActiveScale' has a wrong offset!");
static_assert(offsetof(ATrap_Ceiling_Spikes_C, SpikeHoldOnFireLength) == 0x000FB4, "Member 'ATrap_Ceiling_Spikes_C::SpikeHoldOnFireLength' has a wrong offset!");
static_assert(offsetof(ATrap_Ceiling_Spikes_C, Reload_Sound) == 0x000FB8, "Member 'ATrap_Ceiling_Spikes_C::Reload_Sound' has a wrong offset!");
static_assert(offsetof(ATrap_Ceiling_Spikes_C, Trap_Explode_Sound) == 0x000FC0, "Member 'ATrap_Ceiling_Spikes_C::Trap_Explode_Sound' has a wrong offset!");
static_assert(offsetof(ATrap_Ceiling_Spikes_C, Place_Trap_Sound) == 0x000FC8, "Member 'ATrap_Ceiling_Spikes_C::Place_Trap_Sound' has a wrong offset!");

}

