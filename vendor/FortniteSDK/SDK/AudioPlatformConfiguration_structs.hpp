#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AudioPlatformConfiguration

#include "Basic.hpp"


namespace SDK
{

// Enum AudioPlatformConfiguration.ESoundwaveSampleRateSettings
// NumValues: 0x0006
enum class ESoundwaveSampleRateSettings : uint8
{
	Max                                      = 0,
	High                                     = 1,
	Medium                                   = 2,
	Low                                      = 3,
	Min                                      = 4,
	MatchDevice                              = 5,
};

// ScriptStruct AudioPlatformConfiguration.PlatformCompressionOverrides
// 0x0060 (0x0060 - 0x0000)
struct FPlatformCompressionOverrides final
{
public:
	bool                                          bOverrideCompressionTimes;                         // 0x0000(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2315[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         DurationThreshold;                                 // 0x0004(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         MaxNumRandomBranches;                              // 0x0008(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bResampleForDevice;                                // 0x000C(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2316[0x3];                                     // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<ESoundwaveSampleRateSettings, float>     PlatformSampleRates;                               // 0x0010(0x0050)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FPlatformCompressionOverrides) == 0x000008, "Wrong alignment on FPlatformCompressionOverrides");
static_assert(sizeof(FPlatformCompressionOverrides) == 0x000060, "Wrong size on FPlatformCompressionOverrides");
static_assert(offsetof(FPlatformCompressionOverrides, bOverrideCompressionTimes) == 0x000000, "Member 'FPlatformCompressionOverrides::bOverrideCompressionTimes' has a wrong offset!");
static_assert(offsetof(FPlatformCompressionOverrides, DurationThreshold) == 0x000004, "Member 'FPlatformCompressionOverrides::DurationThreshold' has a wrong offset!");
static_assert(offsetof(FPlatformCompressionOverrides, MaxNumRandomBranches) == 0x000008, "Member 'FPlatformCompressionOverrides::MaxNumRandomBranches' has a wrong offset!");
static_assert(offsetof(FPlatformCompressionOverrides, bResampleForDevice) == 0x00000C, "Member 'FPlatformCompressionOverrides::bResampleForDevice' has a wrong offset!");
static_assert(offsetof(FPlatformCompressionOverrides, PlatformSampleRates) == 0x000010, "Member 'FPlatformCompressionOverrides::PlatformSampleRates' has a wrong offset!");

}

